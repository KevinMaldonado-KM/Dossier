[8][17] milieu de map
[2][24] croix
[10][3] rond






void MoveToken (CMat & Mat, const char & Move, CPosition & Pos)
{
    char car = Mat [Pos.first][Pos.second];
    Mat [Pos.first][Pos.second] = KEmpty;
    switch (Move)
    {
    case 'A':

        if (Pos.first == 0) {
            Pos.first = Mat.size()-1;
        }
        else {
            -- Pos.first;
        }

        if (Pos.second == 0) {
            Pos.second = Mat[Pos.first].size()-1;
        }
        else {
            -- Pos.second;
        }

        if(Mat[Pos.first][Pos.second] == '#' | Mat[Pos.first][Pos.secon] == 'o')
        {
            ++Pos.second;
            ++Pos.first;
            break;
        }
        if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 5;
	    Pos.second = 8;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 2;
	    Pos.second = 4;
	}
	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}
        break;
    case 'Z':

        if (Pos.first == 0) {
            Pos.first = Mat.size()-1;
            break;
        }

        if(Mat[Pos.first-1][Pos.second] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {
            break;
        }

        else {
            --Pos.first;
        }
        
	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 5;
	    Pos.second = 9;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 2;
	    Pos.second = 5;
	}
	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}

        break;

    case 'E':
        if (Pos.first == 0) {
            Pos.first = Mat.size()-1;
        }
        else {
            -- Pos.first;
        }

        if (Pos.second == Mat[Pos.first].size()-1) {
            Pos.second = 0;
        }
        else {
            ++ Pos.second;
        }

        if(Mat[Pos.first][Pos.second] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {
            --Pos.second;
            ++Pos.first;
            break;
        }

	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 5;
	    Pos.second = 10;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 2;
	    Pos.second = 6;
	}
	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}

        break;
    case 'Q':

        if (Pos.second == 0) {
            Pos.second = Mat[Pos.first].size()-1;
            break;
        }

        if(Mat[Pos.first][Pos.second-1] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {

            break;
        }
        else {
            --Pos.second;
        }

	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 6;
	    Pos.second = 8;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 3;
	    Pos.second = 4;
	}

	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}

        break;
    case 'D':

        if (Pos.second == Mat[Pos.first].size()-1) {
            Pos.second = 0;
            break;
        }

        if(Mat[Pos.first][Pos.second+1] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {

            break;
        }
        else {
            ++Pos.second;
        }

	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 6;
	    Pos.second = 10;
	}

	if (MatÂ¨Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 3;
	    Pos.second = 6;
	}

	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}
        break;
    case 'W':

        if (Pos.first == Mat.size()-1) {
            Pos.first = 0;

        }
        else {
            ++ Pos.first;
        }

        if (Pos.second == 0) {
            Pos.second = Mat[Pos.first].size()-1;

        }

        else {
            -- Pos.second;
        }

        if(Mat[Pos.first][Pos.second] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {
            ++Pos.second;
            --Pos.first;
            break;
        }
	
	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 7;
	    Pos.second = 8;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 4;
	    Pos.second = 4;
	}
	
	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}
        break;
    case 'S':

        if (Pos.first == Mat.size()-1) {
            Pos.first = 0;
            break;
        }

        if(Mat[Pos.first+1][Pos.second] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {

            break;
        }
        else {
            ++Pos.first;
        }

	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 7;
	    Pos.second = 9;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 4;
	    Pos.second = 5;
	}

	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}

        break;
    case 'C':

        if (Pos.first == Mat.size()-1) {
            Pos.first = 0;
        } else {
            ++ Pos.first;
        }

        if (Pos.second == Mat[Pos.first].size()-1) {
            Pos.second = 0;
        } else {
            ++ Pos.second;
        }

        if(Mat[Pos.first][Pos.second] == '#'| Mat[Pos.first][Pos.secon] == 'o')
        {
            --Pos.second;
            --Pos.first;
            break;
        }

	if (Mat[Pos.first][Pos.second] == Mat[3][5] {
	    Pos.first = 7;
	    Pos.second = 10;
	}

	if (Mat[Pos.first][Pos.second] == Mat[6][9] {
	    Pos.first = 4;
	    Pos.second = 6;
	}

	if (Mat[Pos.first][Pos.second] == Mat[10][3]) {
	    Pos.first = 9;
	    Pos.second = 17;
	}

	if (Mat[Pos.first][Pos.second] == Mat[2][24]) {
	    Pos.first = 7;
	    Pos.second = 17;
	}

        break;
    }
    Mat [Pos.first][Pos.second] = car;
} //MoveToken ()